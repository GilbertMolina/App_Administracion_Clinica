@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Cita</h2>
<br>

<form class="form-horizontal">
    <div class="form-group">
        <label class="control-label col-sm-2" for="id">Número de cita:</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="id">
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="idPaciente">Cédula paciente:</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="idPaciente">
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="paciente">Nombre paciente:</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="paciente">
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="apellido1">Tipo de cita:</label>
        <div class="col-sm-10">
            <select class="form-control" id="tiposCita">
                <option value="">Seleccione</option>
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="apellido2">Estado de la cita:</label>
        <div class="col-sm-10">
            <select class="form-control" id="estadosCita">
                <option value="">Seleccione</option>
            </select>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2" for="fechaCita" style="margin-right: 15px;">Fecha de la cita:</label>
        <div class="input-group date col-sm-3" id="fechaCita" style="width: 280px;">
            <input type="text" class="form-control" />
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="button" id="modificarCita" class="btn btn-primary" onClick='editarCita()'>Editar</button>
        </div>
    </div>
</form>

@section scripts
{
    <script>
        var inicioURLAPI = 'http://localhost:55710/api/citaspacientes/';

        $(document).ready(function () {
            /// <summary>Se ejecuta al cargar la página. Además se encarga de solicitar vía AJAX los datos de la cita a editar.</summary>

            var idCita = obtenerParametroURL();

            $.ajax({
                url: inicioURLAPI + idCita,
                success: function (data) {
                    $('#id').val(data.id);
                    $('#idPaciente').val(data.pacientes.id);
                    $('#paciente').val(data.pacientes.nombre + " " + data.pacientes.apellido1);

                    $("#fechaCita").datetimepicker({
                        format: 'DD/MM/YYYY hh:mm a',
                        date: moment(data.fechaCita)
                    });

                    $.each(data.listaTiposCitas, function () {
                        $("#tiposCita").append($("<option/>").val(this.id).text(this.nombre));
                    });

                    $("#tiposCita").val(data.idTipoCita);

                    $.each(data.listaEstadosCitas, function () {
                        $("#estadosCita").append($("<option/>").val(this.id).text(this.nombre));
                    });

                    $("#estadosCita").val(data.idEstadoCita);

                    $('#id').prop("disabled", true);
                    $('#idPaciente').prop("disabled", true);
                    $('#paciente').prop("disabled", true);

                    $('#editarCita').prop("disabled", false);
                },
                error: function (xhr, status, error) {
                    var mensajeError;

                    if (error.includes("Not Found")) {
                        mensajeError = "<strong>No se encontró ninguna cita con el número de cita proporcionado.</strong>";
                    }
                    else {
                        mensajeError = "<strong>Hubo un problema al obtener la cita, consulte con el administrador.</strong>"
                    }

                    $('#editarCita').prop("disabled", true);

                    bootbox.alert({
                        title: "<b>Error</b>",
                        message: mensajeError
                    });
                }
            });
        });

        function editarCita() {
            /// <summary>Edita la cita cargada con los datos del formulario.</summary>

            var URLRedireccion = window.location.origin + "/Appointment";

            var idCita = $('#id').val();
            var idPaciente = $('#idPaciente').val();
            var idTipoCita = $("#tiposCita").val();
            var idEstadoCita = $("#estadosCita").val();
            var valorEstadoCita = $("#estadosCita").find("option:selected").text();

            if (idPaciente == "") {
                bootbox.alert({
                    title: "<b>Validación</b>",
                    message: "El paciente es requerido."
                });

                return false;
            } else if (idTipoCita == "") {
                bootbox.alert({
                    title: "<b>Validación</b>",
                    message: "El tipo de cita es requerido."
                });

                return false;
            } else if (idEstadoCita == "") {
                bootbox.alert({
                    title: "<b>Validación</b>",
                    message: "El estado de cita es requerido."
                });

                return false;
            } else if ($("#fechaCita").data("DateTimePicker").date() == null) {
                bootbox.alert({
                    title: "<b>Validación</b>",
                    message: "La fecha de la cita es requerida."
                });

                return false;
            }

            var fechaCita = $("#fechaCita").data("DateTimePicker").date()._d;
            var fechaFormateada = moment(fechaCita).format('YYYY-MM-DDTHH:mm:ss');

            if (valorEstadoCita == "Cancelada" && !esPosibleCancelarLaCita()) {
                bootbox.alert({
                    title: "<b>Validación</b>",
                    message: "Lo sentimos, solamente se puden cancelar citas como mínimo con 24 horas de antelación."
                });

                return false;
            }

            var cita = {
                id: idCita,
                idPaciente: idPaciente,
                idTipoCita: idTipoCita,
                idEstadoCita: idEstadoCita,
                fechaCita: fechaFormateada
            }

            $.ajax({
                url: inicioURLAPI + idCita,
                method: "PUT",
                dataType: "json",
                data: cita,
                success: function () {
                    window.location.replace(URLRedireccion);
                },
                error: function (xhr, status, error) {
                    var mensajeError;

                    if (error.includes("Bad Request")) {
                        mensajeError = "<strong>No se encontró en la base de datos la cita que desea editar.</strong>";
                    }
                    else {
                        mensajeError = "<strong>La cita no se puede editar, consulte con el administrador.</strong>"
                    }

                    bootbox.alert({
                        title: "<b>Error</b>",
                        message: mensajeError
                    });
                }
            });
        }

        function esPosibleCancelarLaCita() {
            /// <summary>Verifica si la cantidad de horas para la cita es menor a 24, si es así retorna false, en caso contrario retorna true.</summary>
            /// <returns type="bool" />

            var fechaCita = moment($("#fechaCita").data("DateTimePicker").date()._d);
            var fechaActual = moment(new Date());
            var cantidadHoras = fechaCita.diff(fechaActual, 'hours');

            if (cantidadHoras < 24) {
                return false;
            }

            return true;
        }

        function obtenerParametroURL() {
            /// <summary>Obtiene el parámetro pasado en la URL.</summary>
            /// <returns type="string" />

            var URLPagina = window.location.href;
            var indiceUltimoSlash = URLPagina.lastIndexOf("/");
            return (indiceUltimoSlash > 0 && URLPagina.length - 1 != indiceUltimoSlash) ? URLPagina.substring(indiceUltimoSlash + 1) : 0;
        };
    </script>
}